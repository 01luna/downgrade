#!/usr/bin/env bash
message() {
  printf "usage: downgrade [option, ...] [--] <pkg>, ...\n" >&2
  printf "see downgrade(8) for details.\n" >&2
}

prompt_to_install() {
  local pkg ans i=1

  (( $# )) || return 1

  printf "Available packages:\n\n"

  for entry; do
    output_package "$((i++))" "$entry"
  done

  # note: read -p doesn't work in cram tests
  printf "\nselect a package by number: "; read -r ans
  printf "\n"

  pkg="${!ans}"

  [[ -n "$pkg" ]] || return 1

  install_pkg "$pkg"
}

prompt_to_ignore() {
  local pkg="$1" ans

  grep -Eq "^IgnorePkg.*( |=)$pkg( |$)" "$PACMAN_CONF" && return 0

  # note: read -p doesn't work in cram tests
  printf "\nadd %s to IgnorePkg? [y/n] " "$pkg"; read -r ans
  printf "\n"

  if [[ "${ans,,}" == 'y' ]]; then
    as_root sed -i "s/^#\?\(IgnorePkg.*\)/\1 $pkg/" "$PACMAN_CONF"
  fi
}

search_arm() {
  curl \
    --fail --silent \
    --data "arch=$arch" \
    --data-urlencode "pkgname=$1" "$ARM_URL/exact" \
    | cut -d '|' -f 5
}

search_cache() {
  # We use the -[0-9]* glob to disambiguate cases like foo-1.0 and
  # foo-completion-1.0. The R is a special case for erlang.
  find $( sed '/^#\?CacheDir *= *\(.*\)$/!d;s//\1/' "$PACMAN_CONF" ) \
    -name "$1-[0-9R]*.pkg.tar.[gx]z" -print
}

search_all() {
  search_arm "$1"
  search_cache "$1"
}

sort_packages() {
  grep -Fv 'testing/' \
    | awk 'BEGIN { FS="/"; OFS="|" } { print $NF, $0 }' \
    | sort -rV -t '|' -k 1 | cut -d '|' -f 2-
}

output_package() {
  local n="$1"
  local package=$(sed '
    s|http://.*/\([^/]\+\)$|\1 (remote)|;
    s|^/.*/\([^/]\+\)$|\1 (local)|;
  ' <<< "$2")

  printf "%4.4s) %s\n" "$n" "$package"
}

install_pkg() {
  local pkg="$1" url

  if [[ "$pkg" == http://* ]]; then
    url="$pkg"
    pkg="${url##*/}"

    curl --silent "$url" > "$pkg"
  fi

  [[ -f "$pkg" ]] && as_root "$PACMAN" -U "$pkg"
}

as_root() {
  if (( use_sudo )) && type -p sudo &>/dev/null; then
    sudo "$@"
  else
    printf -v cmd "%q " "$@"
    su root -c "$cmd"
  fi
}

arch=$(uname -m)
provider='all'
use_sudo=1

PACMAN="${PACMAN:-pacman}"
PACMAN_CONF="${PACMAN_CONF:-/etc/pacman.conf}"
ARM_URL="${ARM_URL:-http://repo-arm.archlinuxcn.org}"

args=()

while [[ -n "$1" ]]; do
  case "$1" in
    -m|--arch)        shift; arch="$1"             ;;
    -p|--provider)    shift; provider="$1"         ;;
    -s|--nosudo)      use_sudo=0                   ;;
    -h|--help)        message; exit                ;;
    --)               shift; args+=( "$@" ); break ;;
    -*)               message; exit 1              ;;
    *)                args+=( "$1" )               ;;
  esac
  shift
done

[[ "$provider" =~ arm|cache|all ]] || provider='all'

for term in "${args[@]}"; do
  candidates=( $(search_$provider "$term" | sort_packages) )
  prompt_to_install "${candidates[@]}" && prompt_to_ignore "$term"
done
